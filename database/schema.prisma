generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // Oder: "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  discordId String   @unique
  name      String?
  optIn     Boolean  @default(false)
  joinedAt  DateTime @default(now())
}

model CommandStat {
  command   String   @id
  count     Int      @default(0)
  updatedAt DateTime @updatedAt
}

model Feedback {
  id          String   @id @default(cuid())
  protocolNo  Int      @unique
  userId      String
  username    String
  serverId    String
  title       String
  description String
  category    String
  importance  String
  module      String?
  fileUrl     String?
  createdAt   DateTime @default(now())
}

model FunGame {
  id        String   @id @default(cuid())
  name      String   @unique
  emoji     String?
  isFree    Boolean  @default(false)

  wonPolls  Poll[]   @relation("PollWinner")
  polls     Poll[]   @relation("PollGames")
  votes     Vote[]
}

model Poll {
  id         String     @id @default(cuid())
  question   String
  type       String
  pollNumber Int
  messageId  String
  createdAt  DateTime   @default(now())
  endedAt    DateTime?
  winnerId   String?
  winner     FunGame?   @relation("PollWinner", fields: [winnerId], references: [id])

  games      FunGame[]  @relation("PollGames")
  votes      Vote[]
}

model Vote {
  id        String   @id @default(cuid())
  userId    String
  gameId    String
  pollId    String
  createdAt DateTime @default(now())

  game      FunGame  @relation(fields: [gameId], references: [id])
  poll      Poll     @relation(fields: [pollId], references: [id])
}

enum DinoColor {
  rot
  gruen
  blau
  gelb
  orange
  lila
  braun
  pink
  schwarz
  weiss
}

enum DinoType {
  fleischfresser
  vegetarier
}

enum DinoSize {
  klein
  mittel
  gross
}

enum DinoStyle {
  suess
  gefaehrlich
  trashig
  nobel
  nerdig
  rtl
}

model DinoName {
  id          Int         @id @default(autoincrement())
  name        String      @unique
  color       DinoColor?  // Optional â€“ Auswahl wie im Modal
  type        DinoType?   // Optional
  size        DinoSize?   // Optional
  style       DinoStyle?  // Optional

  approved    Boolean     @default(false)
  submittedBy String?     // Discord User ID
  createdAt   DateTime    @default(now())
}

model DinoStats {
  id           Int      @id @default(autoincrement())
  totalUses    Int      @default(0)
  totalRerolls Int      @default(0)
  updatedAt    DateTime @updatedAt
}
